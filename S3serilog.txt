using System;
using System.IO;
using System.Threading.Tasks;
using Amazon;
using Amazon.S3;
using Amazon.S3.Transfer;
using Amazon.Runtime;
using Microsoft.Extensions.Configuration;
using Serilog;

class Program
{
    static async Task Main(string[] args)
    {
        // Configure Serilog
        Log.Logger = new LoggerConfiguration()
            .WriteTo.Console() // Optional: log to the console as well
            .WriteTo.File("logs/logfile.log", rollingInterval: RollingInterval.Day)
            .CreateLogger();

        Log.Information("Application starting...");

        try
        {
            // Load configurations from appsettings.json
            var configuration = new ConfigurationBuilder()
                .SetBasePath(Directory.GetCurrentDirectory())
                .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true)
                .Build();

            // Retrieve S3 configurations
            var s3ConfigSection = configuration.GetSection("S3Settings");
            string endpoint = s3ConfigSection["Endpoint"];
            string accessKey = s3ConfigSection["AccessKey"];
            string secretKey = s3ConfigSection["SecretKey"];
            string bucketName = s3ConfigSection["BucketName"];
            string filePath = s3ConfigSection["FilePath"];

            Log.Information("Configurations loaded successfully.");

            // Initialize AWS credentials and configuration
            var credentials = new BasicAWSCredentials(accessKey, secretKey);

            var config = new AmazonS3Config
            {
                ServiceURL = endpoint,
                ForcePathStyle = true,
                UseHttp = true,
            };

            // Initialize S3 client with custom endpoint and configuration
            using (var s3Client = new AmazonS3Client(credentials, config))
            {
                try
                {
                    // Create an upload request
                    var transferUtility = new TransferUtility(s3Client);

                    // Upload the file
                    await transferUtility.UploadAsync(filePath, bucketName);
                    Log.Information("File uploaded successfully to bucket: {BucketName}", bucketName);
                }
                catch (AmazonS3Exception e)
                {
                    Log.Error(e, "AmazonS3Exception occurred while uploading the file.");
                }
                catch (Exception e)
                {
                    Log.Error(e, "An unexpected error occurred.");
                }
            }
        }
        catch (Exception e)
        {
            Log.Fatal(e, "Application terminated unexpectedly.");
        }
        finally
        {
            Log.CloseAndFlush();
        }
    }
}
