{
  "Serilog": {
    "Using": ["Serilog.Sinks.File"],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log-.txt",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ]
  }
}
using System;
using Amazon.S3;
using Amazon.S3.Model;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        // Set up the S3 client
        var s3Client = new AmazonS3Client();

        try
        {
            // List all S3 buckets
            var response = await s3Client.ListBucketsAsync();

            Console.WriteLine("Buckets:");
            foreach (var bucket in response.Buckets)
            {
                Console.WriteLine($"- {bucket.BucketName} (Created on {bucket.CreationDate})");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}


import json

# Specify the path to your JSON file
file_path = 'data.json'

try:
    # Open the JSON file and load its content into a dictionary
    with open(file_path, 'r') as file:
        data = json.load(file)
        print("JSON file successfully loaded into a dictionary.")
        print(data)  # Print the dictionary (optional)
except FileNotFoundError:
    print(f"Error: The file '{file_path}' was not found.")
except json.JSONDecodeError:
    print(f"Error: The file '{file_path}' is not a valid JSON file.")
except Exception as e:
    print(f"An unexpected error occurred: {e}")


