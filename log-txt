
using System;
using System.Data.SqlClient;

namespace TruncateTableApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Replace with your SQL Server connection string
            string connectionString = "Server=your_server_name;Database=your_database_name;User Id=your_username;Password=your_password;";

            // Table to truncate
            string tableName = "TableA";

            try
            {
                Console.WriteLine($"Connecting to database and truncating table: {tableName}...");

                // Call the method to truncate the table
                TruncateTable(connectionString, tableName);

                Console.WriteLine($"Table {tableName} truncated successfully.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"An error occurred: {ex.Message}");
            }
        }

        static void TruncateTable(string connectionString, string tableName)
        {
            // SQL command to truncate the table
            string query = $"TRUNCATE TABLE {tableName}";

            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();

                using (SqlCommand command = new SqlCommand(query, connection))
                {
                    command.ExecuteNonQuery();
                }
            }
        }
    }
}





using System;
using System.IO;

namespace SingleFileApp
{
    class Program
    {
        static void Main(string[] args)
        {
            string logFilePath = Path.Combine(Directory.GetCurrentDirectory(), "log.txt");

            try
            {
                // Log startup message
                LogMessage(logFilePath, "Application started.");

                Console.WriteLine("Hello, single-file world!");
                LogMessage(logFilePath, "Displayed greeting message.");

                // Simulate some work
                LogMessage(logFilePath, "Performing some operations...");
                PerformOperations(logFilePath);

                // Log shutdown message
                LogMessage(logFilePath, "Application finished successfully.");
            }
            catch (Exception ex)
            {
                // Log any exceptions
                LogMessage(logFilePath, $"An error occurred: {ex.Message}");
            }
        }

        static void PerformOperations(string logFilePath)
        {
            // Example operation
            LogMessage(logFilePath, "Operation 1 completed.");
            LogMessage(logFilePath, "Operation 2 completed.");
        }

        static void LogMessage(string filePath, string message)
        {
            string logEntry = $"{DateTime.Now:yyyy-MM-dd HH:mm:ss} - {message}";
            Console.WriteLine(logEntry);

            // Write log entry to the file
            File.AppendAllText(filePath, logEntry + Environment.NewLine);
        }
    }
}